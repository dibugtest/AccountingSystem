@model List<AccountingSystem.Models.bhuktaniAdesh>

@{
    ViewBag.Title = "Create BhuktaniAdesh";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

@Styles.Render("~/Content/nepDate")

<div class="row">
    <h2 class="text-center">भुक्तानी आदेश विवरण प्रविष्टि गर्नुहोस </h2>
    @using (Html.BeginForm("Create", "BhuktaniAdesh", FormMethod.Post))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)
        @Html.ValidationSummary()
        if (ViewBag.Message != null)
        {
            <div class="text-success">
                @ViewBag.Message
            </div>
        }
        if (ViewBag.ErrorMessage != null)
        {
            <div class="text-danger">
                @ViewBag.ErrorMessage
            </div>
        }
        <div class="col-md-3">
            <div class="form-group">
                <label>भुक्तानी आदेश नं</label>
                @Html.TextBox("bhuktaniAdeshNo", Model[0].bhuktaniAdeshNo, new { @class = "form-control", id = "txtAdeshNo" })
            </div>
        </div>
        <div class="col-md-3">
            <div class="form-group">
                <label>आ.ब.</label>
                @Html.DropDownList("fyId", null, new { @class = "form-control", id = "ddlFyId" })
            </div>
        </div>
        <div class="col-md-3">
            <div class="form-group">
                <label>महिना</label><label id="ValMonth"></label>
                @Html.TextBox("month", (string)Model[0].month, new { @class = "form-control", id = "txtMonth", @readOnly = "readOnly" })
            </div>
        </div>
        <div class="col-md-3">
            <div class="form-group">
                <label>मिति</label>
                @Html.TextBox("nepDate", "", new { @class = "form-control", id = "txtNepDate", @data_val = "true" })
            </div>
        </div>

       @Html.TextBox("enDate", DateTime.Now, new { id = "txtEngDate", type = "datetime", style = "display:none;" })
        <table class="table table-bordered" id="dataTable" border="0" cellpadding="0" cellspacing="0">
            <tr>
                <th>विवरण</th>
                <th>खर्च शिर्षक नं.</th>
                <th>पाउने रकम</th>
                <th>भुक्तानी पाउनेको नाम</th>
                <th>भुक्तानी पाउनेको कोड</th>
                <th>कैफियत</th>
                <th></th>
            </tr>
            @if (Model != null && Model.Count > 0)
            {
                int j = 0;
                foreach (var i in Model)
                {
                    <tr id="dataRow">
                        <td>@Html.TextBoxFor(a => a[j].bibaran, "", new { @class = "form-control", id = j + "txtKhaSirsak", @data_val = "true" })</td>
                        <td>@Html.TextBoxFor(a => a[j].khaSiNo, "", new { @class = "form-control", id = j + "txtKhaSiNo", style = "width:250px;", @data_val = "true" })</td>
                        <td>@Html.TextBoxFor(a => a[j].rakam, "", new { @class = "form-control", id = j + "txtRakam" })</td>
                        <td>@Html.TextBoxFor(a => a[j].pauneKoNaam, "", new { @class = "form-control", id = j + "txtPauneKoNaam", style = "width:200px;", @data_val = "true" })</td>
                        <td>@Html.TextBoxFor(a => a[j].pauneKoCode, "", new { @class = "form-control", id = j + "txtPauneKoCode", style = "width:200px;", @data_val = "true" })</td>
                        <td>@Html.TextBoxFor(a => a[j].reamrks, "Ac/Payee", new { @class = "form-control", id = j + "txtRemarks", style = "width:200px;" })</td>
                        <td style="display:none;">@Html.Hidden("[" + j + "].nepDate", DateTime.Now, new { id = j + "txtNepDate" })</td>
                        <td style="display:none;">@Html.Hidden("[" + j + "].baUSiNaId", 2, new { id = j + "txtBaUSiNaId" })</td>
                        <td style="display:none;">@Html.Hidden("[" + j + "].bhuktaniAdeshNo", Model[0].bhuktaniAdeshNo, new { id = j + "txtBhuktnaiAdeshNo" })</td>
                        <td style="display:none;">@Html.HiddenFor(a => a[j].year)</td>
                        <td style="display:none;">@Html.HiddenFor(a => a[j].month)</td>
                        <td style="display:none;">@Html.HiddenFor(a => a[j].monthIndex)</td>
                        <td style="display:none;">@Html.HiddenFor(a => a[j].fyId)</td>
                        <td>
                            @if (j > 0)
                            {
                                <a href="#" id="remove"><i class="fa fa-minus-circle text-danger" style="font-size:15px;"></i></a>
                            }
                        </td>
                    </tr>
                            j++;
                } 
            }
        </table>
        @*<div class="col-md-12 text-right">
                <a href="#" id="addNewRow" class="btn btn-default">Add New Row</a>
            </div>*@

        <div class="col-md-12 text-center">
            <input type="submit" value="Submit" class="btn btn-primary" id="btnSubmit" />
            @Html.ActionLink("Back To List", "Index", null, new { @class = "btn btn-default" })
        </div>

    }
</div>
@* Here I will add Jquery Code for validation / dynamically add new rows / Remove rows etc*@

@section Scripts{
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jquery.ui")
    @Styles.Render("~/Content/css/jquery.ui")
    @Scripts.Render("~/bundles/nepDate")

    <script src="~/Scripts/NepaliUnicode.js"></script>
<script src="~/Transliteration/jsapi.js"></script>

    <script language="javascript">
        $(document).ready(function () {

            function AddUnicodeTxt() {
                var ele5 = $("#txtAdeshNo");
                AddUnicode(ele5);
                var $tableBody = $("#dataTable");
                var $trLast = $tableBody.find("tr:last");
                var suffix = $trLast.find(':input:first').attr('name').match(/\d+/);
                for (var i = 0; i <= suffix; i++) {
                    var ele1 = $("#" + i + "txtPauneKoNaam");
                    var ele2 = $("#" + i + "txtPauneKoCode");
                    var ele3 = $("#" + i + "txtKhaSirsak");
                    var ele4 = $("#" + i + "txtKhaSiNo");
                    AddUnicode(ele1);
                    AddUnicode(ele2);
                    AddUnicode(ele3);
                    AddUnicode(ele4);
                }
               
            }

            AddUnicodeTxt();

            function AddAutoCompleteOption() {
                var $tableBody = $("#dataTable");
                var $trLast = $tableBody.find("tr:last");

                var suffix = $trLast.find(':input:first').attr('name').match(/\d+/);
                for (var i = 0; i <= parseInt(suffix) ; i++) {
                    $("#" + parseInt(i) + "txtPauneKoNaam").autocomplete(autoCompOption);
                }

            }

            AddAutoCompleteOption();



            $('#txtNepDate', 'body').nepaliDatePicker({
                onChange: function () {
                    $('#txtNepDate').val();
                    $('#txtEngDate').val(BS2AD($('#txtNepDate').val()));
                }
            });

            // 2. Remove
            $('body').on("click", 'a#remove', function (e) {
                e.preventDefault();
                $(this).parent().parent().remove();
            });

            //Add new col
            $('body').on("click", 'a#addNewRow', function (e) {
                e.preventDefault();
                var $tableBody = $("#dataTable");
                // var $trRowclicked = $(this).closest('tr');
                var $trLast = $tableBody.find("tr:last");
                var $trNew = $trLast.clone();

                var suffix = $trNew.find(':input:first').attr('name').match(/\d+/);
                $trNew.find("td:last").html('<a href="#" id ="remove"><i class="fa fa-minus-circle text-danger" style="font-size:15px;"></i></a>');
                $.each($trNew.find(':input'), function (i, val) {
                    // Replaced Name
                    var oldN = $(this).attr('name');
                    var newN = oldN.replace('[' + suffix + ']', '[' + (parseInt(suffix) + 1) + ']');
                    $(this).attr('name', newN);

                    var oldId = $(this).attr('id');
                    var newId = oldId.replace(suffix, (parseInt(suffix) + 1));
                    $(this).attr('id', newId);

                    //Replaced value
                    var type = $(this).attr('type');
                    if (type == "text") {
                        $(this).val('');
                    }

                    else if (type == "number") {
                        $(this).val('');
                    }
                    else if (type == "decimal") {
                        $(this).val(0);
                    }
                    // If you have another Type then replace with default value
                    $(this).removeClass("input-validation-error");

                });
                $trLast.after($trNew);
                $("#" + (parseInt(suffix) + 1) + "txtPauneKoNaam").autocomplete(autoCompOption);
                var ele1 = $("#" + (parseInt(suffix) + 1) + "txtPauneKoNaam");
                var ele2 = $("#" + (parseInt(suffix) + 1) + "txtPauneKoCode");
                var ele3 = $("#" + (parseInt(suffix) + 1) + "txtKhaSirsak");
                var ele4 = $("#" + (parseInt(suffix) + 1) + "txtKhaSiNo");
                AddUnicode(ele1);
                AddUnicode(ele2);
                AddUnicode(ele3);
                AddUnicode(ele4);

                // Re-assign Validation
                var form = $("form")
                    .removeData("validator")
                    .removeData("unobtrusiveValidation");
                $.validator.unobtrusive.parse(form);
            });
        });

        $("#0txtPauneKoNaam").keyup(function () {
            $("#0txtPauneKoNaam", "#dataTable").autocomplete(autoCompOption);
        });


        var autoCompOption = {
            source: function (request, response) {
                $.ajax({
                    url: RootUrl + 'BhuktaniAdesh/AutoComplete/',
                    data: "{'prefix': '" + request.term + "'}",
                    dataType: "json",
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {
                        response($.map(data, function (item) {
                            return item;
                        }))
                    }
                    //error: function (response) {
                    //    alert(response.responseText);
                    //},
                    //failure: function (response) {
                    //    alert(response.responseText);
                    //},

                });
            },
            select: function (e, i) {
                $(this).val(i.item.label);
                autofill(i.item.value, $(this).attr('id').match(/\d+/));
            },
            focus: function (event, i) {
                event.preventDefault();
                $(this).val(i.item.label);
            },
            minLength: 1
        }

        function autofill(item, index) {
            $.ajax({
                url: RootUrl + 'BhuktaniAdesh/autofill/',
                data: "{'value':" + JSON.stringify(item) + "}",
                dataType: "json",
                type: "POST",
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    $("#" + index + "txtPauneKoNaam").val(data.pauneKoNaam);
                    $("#" + index + "txtPauneKoCode").val(data.pauneKoCode);
                    $("#" + index + "txtRemarks").val(data.reamrks);
                }//,
               // error: function (response) {
                    // alert("error" + Error.toString() + "error");
               // }
            });
        }


        //function checkValidation() {
        //    if ($("#txtYear").val() == null || $("#txtNepDate").val() == null) {
        //        alert("No value in Year Or Date field");
        //        return false;
        //    }
        //}


        function serializeTableRow() {
            var i = 0;
            $("#dataTable tr#dataRow").each(function (e) {
                $(this).find('input').each(function () {

                    // var suffix = $(this).find(':input:first').attr('name').match(/\d+/);
                    var oldN = $(this).attr('name');
                    var oldNIndex = oldN.match(/\d+/);
                    var newN = oldN.replace('[' + oldNIndex + ']', '[' + parseInt(i) + ']');
                    $(this).attr('name', newN);
                });
                i = (parseInt(i) + 1);
            });
        }

        function validateTabledata() {
            var i = 0;
            $("#dataTable tr#dataRow").each(function (e) {
                var suffix = $(this).find(':input:first').attr('name').match(/\d+/);
                var pauneKoNaam = $("#" + suffix + "txtPauneKoNaam").val();
                var pauneKoCode = $("#" + suffix + "txtPauneKoCode").val();
                if (pauneKoNaam == null || pauneKoNaam == "") {
                    alert("Paune Ko Naame is Required");
                    return false;
                }
                else if (pauneKoCode == null || pauneKoCode == "") {
                    alert("Paune Ko Code is Required");
                    return false;
                }
                else {
                    return true;
                }
            });
        }
        $("#btnSubmit").click(function (e) {
            var breakout = false;
            if ($("#txtAdeshNo").val() == "" ){
                alert("Bhuktani Adesh No is Required");
                e.preventDefault();
                breakout = true;
            }
            
            else if ($("#txtNepDate").val() == "") {
                alert("Date is Required");
                e.preventDefault();
                breakout = true;

            }

           else if (checkBhuktaniAdeshNo()==false)
            {
                alert("Bhuktani Adesh Contains records with " + $("#txtAdeshNo").val() + " Bhuktani Adesh No. Use different bhuktani Adesh No.");
                e.preventDefault();
                breakout = true;
            }

            if (breakout == false) {
                if (validateTabledata() == false) {
                    e.preventDefault();
                    breakout = true;
                }
            }
            if (breakout == false) {
                serializeTableRow();
            }
            else {
                e.preventDefault();
            }
        });

        function checkBhuktaniAdeshNo() {
            var valid = true;
            var jornalNo = $("#txtAdeshNo").val();
            var fyId = $("#ddlFyId").val();
            $.ajax({
                async: false,
                url: RootUrl + 'BhuktaniAdesh/checkBhuktaniAdeshNo/',
                data: "{'bhuktaniAdeshNo':'" + jornalNo + "','fyId':'" + fyId + "'}",
                dataType: "json",
                type: "POST",
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    if (data == "NotNull") {
                        valid = false;
                    }
                }
            });
            return valid;
        }
      
    </script>


@*<script src="https://www.google.com/uds/?file=elements&amp;v=1&amp;packages=transliteration" type="text/javascript"></script>
<script src="https://www.google.com/uds/?file=elements&amp;v=1&amp;packages=transliteration" type="text/javascript"></script>
<script src="https://www.google.com/uds/api/elements/1.0/7ded0ef8ee68924d96a6f6b19df266a8/transliteration.I.js" type="text/javascript"></script>*@
    <script src="~/Transliteration/transliteration.js" type="text/javascript"></script>
<link href="~/Transliteration/transliteration.css" rel="stylesheet" />
<script src="~/Transliteration/transliteration.I.js" type="text/javascript"></script>

}




