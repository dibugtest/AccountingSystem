@model List<AccountingSystem.Models.jornalEntries>

@{
    ViewBag.Title = "Edit Journal";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

@Styles.Render("~/Content/nepDate")

<div class="row">
    <h2 class="text-center">गोश्वारा भौचरको विवरण परिवर्तन गर्नुहोस</h2>
    @using (Html.BeginForm("EditPeski", "jornalEntries", FormMethod.Post))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)
        @Html.ValidationSummary()
        if (ViewBag.Message != null)
        {
            <div style="border:solid 1px green">
                @ViewBag.Message
            </div>
        }
        if (ViewBag.ErrorMessage != null)
        {
            <div style="border:solid 1px green">
                @ViewBag.ErrorMessage
            </div>
        }
        <fieldset style="border:1px solid;">
            <legend style="width:auto;">विवरण</legend>
            <div class="col-md-2">
                <div class="form-group">
                    <label>ग्वाश्वारा भौचर नं.</label>
                    @Html.TextBox("jornalEntriesNo", Model[0].jornalNo, new { @class = "form-control", id = "txtJornalNo", @readOnly = "readonly" })
                </div>
            </div>
            <div class="col-md-2">
                <div class="form-group">
                    <label>ब.उ.शि.नं.</label>
                    @Html.DropDownList("baUSiNaId", null, new { @class = "form-control", id = "txtBaUSiNa" })
                </div>
            </div>
            <div class="col-md-2">

                <div class="form-group">
                    <label>आ.ब.</label>
                    @Html.DropDownList("fyId", null, new { @class = "form-control", id = "ddlFyId" })
                </div>

            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <label>मिति</label>
                    @Html.TextBox("nepDate", Model[0].nepDateStr.Replace('/','-'), new { @class = "form-control", id = "txtNepDate" })
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <label>महिना</label><label id="ValMonth"></label>
                    @Html.DropDownList("month", EnumHelper.GetSelectList(typeof(AccountingSystem.Models.month), (AccountingSystem.Models.month)Model[0].monthIndex), new { @class = "form-control", id = "txtMonth", @data_val = "true", @data_val_required = "Month is Required" })
                </div>
            </div>
            @Html.Hidden("typeJornal", Model[0].jornalType, new { id = "txtJornalType" })
           @Html.TextBox("enDate", DateTime.Now, new { id = "txtEngDate", type = "datetime", style = "display:none;" })
        </fieldset>
        @Html.Hidden("nullStatus", (string)ViewBag.IsNullBhuktanis, new { id = "txtNullStatus" })
        <table class="table table-bordered" id="dataTable" border="0" cellpadding="0" cellspacing="0">
            <tr>
                <th>संकेत नं.</th>
                <th>डेबिट/क्रेडिट</th>
                <th>व्यहोरा</th>
                <th>खाता नं.</th>
                <th>हिसाब नं.</th>
                <th>डेबिट </th>
                <th>क्रेडिट</th>
                <th></th>
            </tr>
            @if (Model != null && Model.Count > 0)
            {
                int j = 0;
                foreach (var i in Model)
                {
                    <tr id="dataRow">
                        <td>@Html.TextBoxFor(a => a[j].sanketNo, new { @class = "form-control", id = j + "txtSanketNo" })</td>
                        <td>
                            @Html.DropDownListFor(a => a[j].deCre, null, new { @class = "form-control", id = j + "ddlDeCre", style = "width:100px;" })
                        </td>
                        <td>@Html.TextBoxFor(a => a[j].bibaran, "", new { @class = "form-control", id = j + "txtBibaran", style = "width:250px;" })</td>
                        <td>@Html.TextBoxFor(a => a[j].khaPaNo, "", new { @class = "form-control", id = j + "txtKhaPaNo" })</td>
                        <td>@Html.TextBoxFor(a => a[j].hisabNo, "", new { @class = "form-control", id = j + "txtHisabNo", style = "width:200px;" })</td>
                        <td>@Html.TextBoxFor(a => a[j].debit, new { @class = "form-control", id = j + "txtDebit", type = "decimal", style = "width:200px;" })</td>
                        <td>@Html.TextBoxFor(a => a[j].credit, new { @class = "form-control", id = j + "txtCredit", type = "decimal", style = "width:200px;" })</td>
                        <td style="display:none;">@Html.HiddenFor(a => a[j].baUSiNaId, new { id = j + "txtBaUSiNaId", value = i.baUSiNaId })</td>
                        <td style="display:none;">@Html.HiddenFor(a => a[j].nepDate, new { id = j + "txtNepaliDate", value = i.nepDate })</td>
                        <td style="display:none;">@Html.HiddenFor(a => a[j].jornalNo, new { id = j + "txtJornalNo", value = i.jornalNo })</td>
                        <td style="display:none;">@Html.HiddenFor(a => a[j].jornalType, new { id = j + "txtJornalType", value = i.jornalType })</td>
                        <td style="display:none;">@Html.HiddenFor(a => a[j].jornalEntriesId, new { id = j + "txtJornalEntriesId", value = i.jornalEntriesId })</td>
                        <td style="display:none;">@Html.HiddenFor(a => a[j].fyId, new { id = j + "txtFyId" })</td>
                        <td style="display:none;">@Html.HiddenFor(a => a[j].chequeRakam, new { id = j + "txtChequeRakam", value = 0 })</td>
                        <td style="width:55px;">
                            @*<a href="#" id="addNewRow">
                                        <i class="fa fa-plus-circle" style="font-size:15px;"></i>
                                    </a>
                                <a href="#" id="remove">
                                    <i class="fa fa-minus-circle text-danger" style="font-size:15px;"></i>
                                </a>*@
                        </td>
                    </tr>
                    j++;
                }
            }
        </table>
        <div class="col-md-12 text-right">
            <a href="#" id="addNewRow1" class="btn btn-default">Add New Row</a>
        </div>
        <div class="col-md-3">
            <label>चेक रकम</label>
            @Html.TextBox("chequeRakam", Model[0].chequeRakam, new {@class="form-control",id="txtChequeRakam",type="number",step="0.01" })
        </div>
        <div class="col-md-12">
            <div class="form-group">
                <label>नोट</label>
                @Html.TextArea("note", Model[0].note, new { @class = "form-control", id = "txtNote" })
            </div>
        </div>

        if ((string)ViewBag.IsNullBhuktanis == "notNull")
        {
            <div class="col-md-12" id="divBhuktani">
                <div class="text-center"><h3>भुक्तानी पाउनेको विवरण प्रविष्टि</h3></div>
                <div class="col-md-3">
                    <div class="form-group">
                        <label>भुक्तानी आदेश नं</label>
                        @Html.TextBox("bhuktaniAdeshNo", (string)ViewBag.bhuktaniAdeshNo, new { @class = "form-control", id = "txtAdeshNo" })
                    </div>
                </div>
                @Html.Hidden("RowCount", (int)ViewBag.RowCount, new { @class = "form-control", id = "txtRowCount" })
                <table class="table table-bordered" id="dataTable2" border="0" cellpadding="0" cellspacing="0">
                    <tr>
                        <th>भुक्तानी पाउनेको नाम</th>
                        <th>भुक्तानी पाउनेको कोड</th>
                        <th>प्यान नं.</th>
                        <th>भु.प्र.नं.</th>
                        <th>खर्च शिर्षक नं.</th>
                        <th>खर्च शिर्षक</th>
                        <th>जम्मा रकम</th>
                        <th>आयकर</th>
                        <th>पा.कर</th>
                        <th>धरौटी</th>
                        <th>बाँकी पाउने</th>
                        <th>कैफियत</th>
                        <th></th>
                    </tr>
                    @{int j = 0;}
                    @foreach (var item in ViewBag.BhuktaniBibaran)
                    {
                        <tr id="dataRow">
                            <td>@Html.TextBox(j + "pauneKoNaam", (string)item.pauneKoNaam, new { @class = "form-control", id = j + "txtPauneKoNaam" })</td>
                            <td>@Html.TextBox(j + "pauneKoCode", (string)item.pauneKoCode, new { @class = "form-control", id = j + "txtPauneKoCode" })</td>
                            <td>@Html.TextBox(j + "panNo", (string)item.panNo, new { @class = "form-control", id = j + "txtPanNo" })</td>
                            <td>@Html.TextBox(j + "bhuPraNo", (string)item.BhuPraNo, new { @class = "form-control", id = j + "txtBhuPraNo" })</td>
                            <td>@Html.TextBox(j + "khaSiNo", (string)item.khaSiNo, new { @class = "form-control", id = j + "txtKhaSiNo", style = "width:100px;", @data_val = "true" })</td>
                            <td>@Html.TextBox(j + "khaSirsak", (string)item.bibaran, new { @class = "form-control", id = j + "txtKhaSirsak", @data_val = "true" })</td>
                            <td>@Html.TextBox(j + "jammaRakam", (decimal)item.jammaRakam, new { @class = "form-control", id = j + "txtJammaRakam", @data_val = "true" })</td>
                            <td>@Html.TextBox(j + "ayaKar", (decimal)item.ayaKar, new { @class = "form-control", id = j + "txtAyaKar", @data_val = "true" })</td>
                            <td>@Html.TextBox(j + "paKar", (decimal)item.paKar, new { @class = "form-control", id = j + "txtPaKar", @data_val = "true" })</td>
                            <td>@Html.TextBox(j + "dharauti", (decimal)item.dharauti, new { @class = "form-control", id = j + "txtDharauti", @data_val = "true" })</td>
                            <td>@Html.TextBox(j + "bakiPaune", (decimal)item.bakiPaune, new { @class = "form-control", id = j + "txtBakiPaune", @data_val = "true" })</td>
                            <td>@Html.TextBox(j + "remarks", (string)item.reamrks, new { @class = "form-control", id = j + "txtRemarks", style = "width:200px;" })</td>
                            <td style="display:none;">@Html.Hidden(j + "RowNum", (int)ViewBag.RowCount, new { @class = "form-control", id = j + "txtRowNum" })</td>
                            <td style="display:none;">@Html.Hidden(j + "bhuktaniAdeshId", (int)item.bhuktaniAdeshId, new { @class = "form-control", id = j + "txtBhuktaniAdeshId" })</td>
                            <td style="display:none;">@Html.Hidden(j + "bhuktaniAdeshNO", (string)item.bhuktaniAdeshNo, new { @class = "form-control", id = j + "txtBhuktaniAdeshNo" })</td>
                            <td style="display:none;">@Html.Hidden(j + "jornalNikasiNo", (string)item.jornalNikasiNo, new { @class = "form-control", id = j + "txtJornalNikasiNo" })</td>
                            <td style="display:none;">@Html.Hidden(j + "ayaKarId", (int)item.ayaKarId, new { @class = "form-control", id = j + "txtAyaKarId" })</td>
                          
                            <td>
                                @*<a href="#" id="remove2">
                                        <i class="fa fa-minus-circle text-danger" style="font-size:15px;"></i>
                                    </a>*@
                            </td>
                        </tr>
                        j++;
                    }

                </table>
                <div class="col-md-12 text-right">
                    <a href="#" id="addNewRow2" class="btn btn-default">Add New Row</a>
                </div>
            </div>
        }

        @*else if (Model[0].jornalType == "कट्टी" && (string)ViewBag.IsNullBhuktanis == "notNull")
    {
        <table class="table table-bordered" id="dataTable3" border="0" cellpadding="0" cellspacing="0">
            <tr>
                <th>फमको नाम</th>
                <th>आयकर</th>
                <th>पा.कर</th>
                <th>धरौटी</th>
                <th>जम्मा रकम</th>
                <th></th>
            </tr>
            @Html.Hidden("RowCount2", (int)ViewBag.RowCount, new { @class = "form-control", id = "txtRowCount2" })
            @{int j = 0;}
            @foreach (var item in ViewBag.AyaKarBibaran)
            {
                <tr id="dataRow">
                    <td>@Html.TextBox(j + "firmName", (string)item.firmName, new { @class = "form-control", id = j + "txtFirmName" })</td>
                    <td>@Html.TextBox(j + "ayaKar", (decimal)item.aayaKar, new { @class = "form-control", id = j + "txtAyaKar", @data_val = "true" })</td>
                    <td>@Html.TextBox(j + "paKar", (decimal)item.paKar, new { @class = "form-control", id = j + "txtPaKar", @data_val = "true" })</td>
                    <td>@Html.TextBox(j + "dharauti", (decimal)item.dharauti, new { @class = "form-control", id = j + "txtDharauti", @data_val = "true" })</td>
                    <td>@Html.TextBox(j + "jammaRakam", (decimal)item.jammaRakam, new { @class = "form-control", id = j + "txtJammaRakam", @data_val = "true" })</td>
                    <td style="display:none;">@Html.Hidden(j + "RowNum2", (int)ViewBag.RowCount, new { @class = "form-control", id = j + "txtRowNum2" })</td>
                    <td style="display:none;">@Html.Hidden(j + "hisabNo", (string)item.hisabNo, new { @class = "form-control", id = j + "txtHisabNo" })</td>
                    <td style="display:none;">@Html.Hidden(j + "fyId", (int)item.fyId, new { @class = "form-control", id = j + "txtFyId" })</td>
                    <td style="display:none;">@Html.Hidden(j + "monthIndex", (int)item.monthIndex, new { @class = "form-control", id = j + "txtMonthIndex" })</td>
                    <td style="display:none;">@Html.Hidden(j + "ayaKarId2", (int)item.ayaKarId, new { @class = "form-control", id = j + "txtAyaKarId2" })</td>

                    <td>
                    </td>
                </tr>
                j++;
            }
        </table>

        <div class="col-md-12 text-right">
            <a href="#" id="addNewRow3" class="btn btn-default">Add New Row</a>
        </div>
    }*@
        <div class="col-md-12 text-center">
            <input type="submit" value="Submit" class="btn btn-primary" id="btnSubmit" />
            @Html.ActionLink("Back To List", "Index", null, new { @class = "btn btn-default" })
        </div>

    }
</div>

@* Here I will add Jquery Code for validation / dynamically add new rows / Remove rows etc*@

@section Scripts{
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jquery.ui")
    @Styles.Render("~/Content/css/jquery.ui")
    @Scripts.Render("~/bundles/nepDate")

    <script src="~/Scripts/NepaliUnicode.js"></script>
   @*<script src="~/Transliteration/jsapi.js"></script>*@
<script type="text/javascript" src="https://www.google.com/jsapi"></script>     

    <script language="javascript">
    $(document).ready(function () {

        function AddUnicodeTxt() {
            var $tableBody = $("#dataTable");
            var $trLast = $tableBody.find("tr:last");
            var suffix = $trLast.find(':input:first').attr('name').match(/\d+/);
            
            for (var i = 0; i <= suffix; i++) {
                var ele1 = $("#" + i + "txtBibaran");
              // $("#" + i + "txtBibaran","#dataTable").autocomplete(autoCompOption);
                var ele2 = $("#" + i + "txtSanketNo");
                var ele3 = $("#" + i + "txtHisabNo");
                var ele4 = $("#" + i + "txtKhaPaNo");
                AddUnicode(ele1);
                AddUnicode(ele2);
                AddUnicode(ele3);
                AddUnicode(ele4);   
            }
          
            if ($("#txtJornalType").val() == "खर्च" && $("#txtNullStatus").val() == "notNull") {
                var $tableBody = $("#dataTable2");
                var $trLast = $tableBody.find("tr:last");
                var suffix = $trLast.find(':input:first').attr('name').match(/\d+/);
                for (var i = 0; i <= suffix; i++) {
                    var ele1 = $("#" + i + "txtPauneKoNaam");
                   // $("#" + i + "txtPauneKoNaam").autocomplete(autoCompOption2)
                    var ele2 = $("#" + i + "txtPauneKoCode");
                    var ele3 = $("#" + i + "txtPanNo");
                    var ele4 = $("#" + i + "txtBhuPraNo");
                    var ele5 = $("#" + i + "txtRemarks");
                    var ele6 = $("#" + i + "txtKhaSiNo");
                    AddUnicode(ele1);
                    AddUnicode(ele2);
                    AddUnicode(ele3);
                    AddUnicode(ele4);
                    AddUnicode(ele5);
                    AddUnicode(ele6);
                }
                var ele6 = $("#txtAdeshNo");
                AddUnicode(ele6);
            }
            else if ($("#txtJornalType").val() == "कट्टी" && $("#txtNullStatus").val() == "notNull") {
                var $tableBody = $("#dataTable3");
                var $trLast = $tableBody.find("tr:last");
                var suffix = $trLast.find(':input:first').attr('name').match(/\d+/);
                for (var i = 0; i <= suffix; i++) {
                    var ele1 = $("#" + i + "txtFirmName");
                    AddUnicode(ele1);
                }
            }
        }
        var ele5 = $("#txtJornalNo");
        var ele6 = $("#txtNote");
        AddUnicode(ele5);
        AddUnicode(ele6);


        AddUnicodeTxt();

        $('#txtNepDate', 'body').nepaliDatePicker({
            onChange: function () {
                // var unicodeText = StringToUnicode($("#txtNepDate").val());
                $('#txtNepDate').val();
                $('#txtEngDate').val(BS2AD($('#txtNepDate').val()));
            }
        });


        $("#addNewRow1").click(function (e) {
            e.preventDefault();
            var $tableBody = $("#dataTable");
            //var $trRowclicked = $(this).closest('tr');
            var $trLast = $tableBody.find("tr:last");
            var $trNew = $trLast.clone();

            var suffix = $trNew.find(':input:first').attr('name').match(/\d+/);
            $trNew.find("td:last").html('<a href="#" id ="addNewRow"> <a href="#" id ="remove"><i class="fa fa-minus-circle text-danger" style="font-size:15px;"></i></a>');
            $.each($trNew.find(':input'), function (i, val) {
                // Replaced Name
                var oldN = $(this).attr('name');
                var newN = oldN.replace('[' + suffix + ']', '[' + (parseInt(suffix) + 1) + ']');
                $(this).attr('name', newN);

                var oldId = $(this).attr('id');
                var newId = oldId.replace(suffix, (parseInt(suffix) + 1));
                $(this).attr('id', newId);

                //Replaced value
                var type = $(this).attr('type');
                if (type == "text") {
                    $(this).val('');
                }

                else if (type == "number") {
                    $(this).val('');
                }
                else if (type == "decimal") {
                    $(this).val(0);
                }
                // If you have another Type then replace with default value
                $(this).removeClass("input-validation-error");

            });
            $trLast.after($trNew);
            $("#" + (parseInt(suffix) + 1) + "txtBibaran").autocomplete(autoCompOption);
            var ele1 = $("#" + (parseInt(suffix) + 1) + "txtBibaran");
            var ele2 = $("#" + (parseInt(suffix) + 1) + "txtSanketNo");
            var ele3 = $("#" + (parseInt(suffix) + 1) + "txtKhaPaNo");
            var ele4 = $("#" + (parseInt(suffix) + 1) + "txtHisabNo");
            AddUnicode(ele1);
            AddUnicode(ele2);
            AddUnicode(ele3);
            AddUnicode(ele4);

            $("#" + (parseInt(suffix) + 1) + "txtJornalEntriesId").val(0);


            // Re-assign Validation
            var form = $("form")
                .removeData("validator")
                .removeData("unobtrusiveValidation");
            $.validator.unobtrusive.parse(form);
        });

        // 2. Remove
        $('body').on("click", 'a#remove', function (e) {
            e.preventDefault();
            $(this).parent().parent().remove();
        });

        $('body').on("click", 'a#remove2', function (e) {
            e.preventDefault();
            $(this).parent().parent().remove();
            var suffix = $("#txtRowCount").val();
            $("#txtRowCount").val(parseInt(suffix) - 1);
        });

        $('body').on("click", 'a#remove3', function (e) {
            e.preventDefault();
            $(this).parent().parent().remove();
            var suffix = $("#txtRowCount2").val();
            $("#txtRowCount2").val(parseInt(suffix) - 1);
        });

        $("#addNewRow2").click(function (e) {
            e.preventDefault();
            var $tableBody = $("#dataTable2");
            var $trLast = $tableBody.find("tr:last");
            var $trNew = $trLast.clone();

            var suffix = $trNew.find(':input:first').attr('name').match(/\d+/);
            var rowNum = $("#" + parseInt(suffix) + "txtRowNum").val();
            var rowCount = $("#txtRowCount").val();
            $("#txtRowCount").val(parseInt(rowCount) + 1);
            $trNew.find("td:last").html(' <a href="#" id="remove2"><i class="fa fa-minus-circle text-danger" style="font-size:15px;"></i></a>');
            $.each($trNew.find(':input'), function (i, val) {

                // Replaced Name
                var oldN = $(this).attr('name');

                var newN = oldN.replace(suffix, (parseInt(suffix) + 1));
                $(this).attr('name', newN);
                var oldId = $(this).attr('id');
                var newId = oldId.replace(suffix, (parseInt(suffix) + 1));
                $(this).attr('id', newId);

                //Replaced value
                var type = $(this).attr('type');
                if (type == "text") {
                    //$(this).attr('value', '');
                    $(this).val('');

                }
                else if (type == "number") {
                    $(this).val('');
                }
                else if (type == "decimal") {
                    $(this).val('');
                }
                // If you have another Type then replace with default value
                $(this).removeClass("input-validation-error");

            });


            $trLast.after($trNew);
            $("#" + (parseInt(suffix) + 1) + "txtPauneKoNaam").autocomplete(autoCompOption2);
            $("#" + (parseInt(suffix) + 1) + "txtKhaSiNo").autocomplete(autoCompOptionKhaSirsak);
            var ele1 = $("#" + (parseInt(suffix) + 1) + "txtPauneKoNaam");
            var ele2 = $("#" + (parseInt(suffix) + 1) + "txtPauneKoCode");
            var ele3 = $("#" + (parseInt(suffix) + 1) + "txtKhaSirsak");
            var ele4 = $("#" + (parseInt(suffix) + 1) + "txtKhaSiNo");
            var ele5 = $("#" + (parseInt(suffix) + 1) + "txtRemarks");
            var ele6 = $("#" + (parseInt(suffix) + 1) + "txtPanNo");
            var ele7 = $("#" + (parseInt(suffix) + 1) + "txtBhuPraNo");
            AddUnicode(ele1);
            AddUnicode(ele2);
            AddUnicode(ele3);
            AddUnicode(ele4);
            AddUnicode(ele5);
            AddUnicode(ele6);
            AddUnicode(ele7);
            //$("#txtRowCount").val(parseInt(suffix) + 1);


            $("#" + (parseInt(suffix) + 1) + "txtBhuktaniAdeshId").val(0);
            $("#" + (parseInt(suffix) + 1) + "txtRowNum").val(parseInt(RowNum) + 1);

            // Re-assign Validation
            var form = $("form")
                .removeData("validator")
                .removeData("unobtrusiveValidation");
            $.validator.unobtrusive.parse(form);
        });


        $("#addNewRow3").click(function (e) {
            e.preventDefault();
            var $tableBody = $("#dataTable3");
            var $trLast = $tableBody.find("tr:last");
            var $trNew = $trLast.clone();

            var suffix = $trNew.find(':input:first').attr('name').match(/\d+/);

            var rowCount = $("#txtRowCount2").val();
            $("#txtRowCount2").val(parseInt(rowCount) + 1);
            $trNew.find("td:last").html(' <a href="#" id="remove3"><i class="fa fa-minus-circle text-danger" style="font-size:15px;"></i></a>');
            $.each($trNew.find(':input'), function (i, val) {

                // Replaced Name
                var oldN = $(this).attr('name');
                var newN = oldN.replace(suffix, (parseInt(suffix) + 1));
                $(this).attr('name', newN);

                var oldId = $(this).attr('id');
                var newId = oldId.replace(suffix, (parseInt(suffix) + 1));
                $(this).attr('id', newId);

                //Replaced value
                var type = $(this).attr('type');
                if (type == "text") {
                    //$(this).attr('value', '');
                    $(this).val('');

                }
                else if (type == "number") {
                    $(this).val('');
                }
                else if (type == "decimal") {
                    $(this).val('');
                }
                // If you have another Type then replace with default value
                $(this).removeClass("input-validation-error");

            });


            $trLast.after($trNew);
            //$("#" + (parseInt(suffix) + 1) + "txtFirmName").autocomplete(autoCompOption2);
            var ele1 = $("#" + (parseInt(suffix) + 1) + "txtFirmName");

            AddUnicode(ele1);

            $("#" + (parseInt(suffix) + 1) + "txtAyaKarId2").val(0);
            $("#" + (parseInt(suffix) + 1) + "txtRowNum2").val(parseInt(RowNum2) + 1);


            //$("#txtRowCount").val(parseInt(suffix) + 1);
            // Re-assign Validation
            var form = $("form")
                .removeData("validator")
                .removeData("unobtrusiveValidation");
            $.validator.unobtrusive.parse(form);
        });




        //$("#0txtBibaran").keyup(function () {
        //    $("#0txtBibaran", "#dataTable").autocomplete(autoCompOption);
        //});




        var autoCompOption = {
            source: function (request, response) {
                $.ajax({
                    url: RootUrl + 'JornalEntries/AutoComplete/',
                    data: "{'prefix': '" + request.term + "'}",
                    dataType: "json",
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {
                        response($.map(data, function (item) {
                            return item;
                        }))
                    },
                    error: function (response) {
                        alert(response.responseText);
                    },
                    failure: function (response) {
                        alert(response.responseText);
                    }
                });
            },
            select: function (e, i) {
                $(this).val(i.item.label);
                autofill(i.item.value, $(this).attr('id').match(/\d+/));
            },
            focus: function (event, i) {
                event.preventDefault();
                $(this).val(i.item.label);
            },
            minLength: 1
        }

        function autofill(item, index) {
            $.ajax({
                url: RootUrl + 'JornalEntries/autofill/',
                data: "{'value':" + JSON.stringify(item) + "}",
                dataType: "json",
                type: "POST",
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    $("#" + index + "txtBibaran").val(data.byehoraName);
                    if (data.hisabNo == null) {
                        $("#" + index + "txtHisabNo").val("");
                    }
                    else {
                        $("#" + index + "txtHisabNo").val(data.hisabNo);
                    }
                },
                error: function (response) {
                    alert("error" + Error.toString() + "error");
                }
            });
        }



        var autoCompOption2 = {
            source: function (request, response) {
                $.ajax({
                    url: RootUrl + 'JornalEntries/AutoComplete2/',
                    data: "{'prefix': '" + request.term + "'}",
                    dataType: "json",
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {
                        response($.map(data, function (item) {
                            return item;
                        }))
                    }
                });
            },
            select: function (e, i) {
                $(this).val(i.item.label);
                autofill2(i.item.value, $(this).attr('id').match(/\d+/));
            },
            focus: function (event, i) {
                event.preventDefault();
                $(this).val(i.item.label);
            },
            minLength: 1
        }

        function autofill2(item, index) {
            $.ajax({
                url: RootUrl + 'JornalEntries/autofill2/',
                data: "{'value':" + JSON.stringify(item) + "}",
                dataType: "json",
                type: "POST",
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    $("#" + index + "txtPauneKoNaam").val(data.pauneKoNaam);
                    $("#" + index + "txtPanNo").val(data.panNo);
                    $("#" + index + "txtRemarks").val("AC/Payee");
                }
            });
        }


        var autoCompOption3 = {
            source: function (request, response) {
                $.ajax({
                    url: RootUrl + 'JornalEntries/AutoComplete3/',
                    data: "{'prefix': '" + request.term + "'}",
                    dataType: "json",
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {
                        response($.map(data, function (item) {
                            return item;
                        }))
                    }
                });
            },
            select: function (e, i) {
                $(this).val(i.item.label);
                autofill2(i.item.value, $(this).attr('id').match(/\d+/));
            },
            focus: function (event, i) {
                event.preventDefault();
                $(this).val(i.item.label);
            },
            minLength: 1
        }

        function autofill3(item, index) {
            $.ajax({
                url: RootUrl + 'JornalEntries/autofill3/',
                data: "{'value':" + JSON.stringify(item) + "}",
                dataType: "json",
                type: "POST",
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    $("#" + index + "txtKhaSiNo").val(data.khaSiNo);
                    $("#" + index + "txtKhaSirsak").val(data.khaSirsak);
                }
            });
        }


        var autoCompOptionKhaSirsak = {
            source: function (request, response) {
                $.ajax({
                    url: RootUrl + 'JornalEntries/AutoCompleteKhaSirsak',
                    //url: '@Url.Action("AutoComplete", "JornalEntries")',
                    data: "{'prefix': '" + request.term + "'}",
                    dataType: "json",
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {
                        response($.map(data, function (item) {
                            return item;
                        }))
                    },
                    error: function (response) {
                        // alert(response.responseText);
                    },
                    failure: function (response) {
                        // alert(response.responseText);
                    },

                });
            },
            select: function (e, i) {
                $(this).val(i.item.label);
                autofillKhaSirsak(i.item.value, $(this).attr('id').match(/\d+/));
            },
            focus: function (event, i) {
                event.preventDefault();
                $(this).val(i.item.label);
            },
            minLength: 1
        }


        function autofillKhaSirsak(item, index) {
            $.ajax({
                url: RootUrl + 'JornalEntries/autofillKhaSirsak/',
                data: "{'value':'" + item + "'}",
                dataType: "json",
                type: "POST",
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    $("#" + index + "txtKhaSirsak").val(data.khaSirsak);
                    $("#" + index + "txtKhaSiNo").val(data.khaSiNo);
                },
                error: function (response) {
                    // alert("error" + Error.toString() + "error");
                }
            });
        }



        function checkValidationDeCre() {

            var deAmount = 0;
            var creAmount = 0;
            var breakout = false;
            $("body #dataTable tr#dataRow ").each(function (e) {

                var suffix = $(this).find(':input:first').attr('name').match(/\d+/);

                var deCre = $("#" + suffix + "ddlDeCre").val();
                var debit = $("#" + suffix + "txtDebit").val();
                var credit = $("#" + suffix + "txtCredit").val();

                if ($("#" + suffix + "txtBibaran").val() == "") {
                    alert("Bhyehora Field is Empty");
                    breakout = true;
                    return false;
                    //break;
                }
                if (deCre == "") {
                    alert("Please Select Dedit or Credit in dropdown option");
                    breakout = true;
                    return false;
                    // break;
                }
                if ((deCre == "debit" && parseFloat(debit) == 0) || (deCre == "debit" && parseFloat(credit) != 0) || (deCre == "credit" && parseFloat(credit) == 0) || (deCre == "credit" && parseFloat(debit) != 0)) {
                    alert("Insert Value in debit or Credit field with matching selection of debit or credit from debit/Credit field");
                    breakout = true;
                    return false;
                    // break;
                }
                deAmount = parseFloat(deAmount) + parseFloat($("#" + suffix + "txtDebit").val());
                creAmount = parseFloat(creAmount) + parseFloat($("#" + suffix + "txtCredit").val());
            });
            if (breakout == false) {
                if (deAmount.toFixed(2) != creAmount.toFixed(2)) {
                    alert("Total Debit and Credit amount are not equal.Please make correction and submit.")
                    return false;
                }
            }
            if (breakout) {
                return false;
            }
            else {
                return true;
            }
        }



        function checkValidationTextBox() {
            if ($("#txtJornalNo").val() == null) {
                alert("Jornal Num is Required");
                return false;
            }
            else if ($("#txtBaUSiNa").val() == null || $("#txtBaUSiNa").val() == 0) {
                alert("No Option Selected From BaUSiNa");
                return false;
            }
            else if ($("#txtNepDate").text() == null || $("#txtNepDate").val() == "") {
                alert("Date is Null");
                return false;
            }
            else if ($("#txtChequeRakam").val() == 0 || $("#txtChequeRakam").val() == "")
            {
                alert("Chqeque Rakam is Required");
                return false;
            }
            else {
                return true;
            }
        }

        function checkValidationBhuktani() {
            var breakout = false;
            $("body #dataTable2 tbody#dataRow tr").each(function (e) {
                var oldIndex = $(this).find(':input:first').attr('name').match(/\d+/);
                var wiwaran = $("#" + oldNIndex + "txtKhaSirsak").val();
                var khaSiNa = $("#" + oldNIndex + "txtKhaSiNa").val();
                var jammaRakam = $("#" + oldNIndex + "txtJammaRakam").val();
                var pauneKoNaam = $("#" + oldNIndex + "txtPauneKoNaam").val();
                var pauneKoCode = $("#" + oldNIndex + "txtPauneKoCode").val();
                var ayaKar = $("#" + oldNIndex + "txtAyaKar").val();
                var paKar = $("#" + oldNIndex + "txtPaKar").val();
                var dharauti = $("#" + oldNIndex + "txtDharauti").val();
                var bakiPaune = $("#" + oldNIndex + "txtBakiPaune").val();
                if (wiwaran == "" || khaSiNa == "" || isNaN(ayaKar) || isNaN(paKar) || isNaN(dharauti) || isNaN(bakiPaune) || isNaN(jammaRakam) || paunekoNaam == "" || pauneKoCode == "") {
                    alert("All Fields in भुक्तानी आदेश table are not inserted.");
                    breakout = true;
                    return false;
                }
            });
            if (breakout) {
                return false;
            }
            else {
                return true;
            }
        }

        function checkValidationAyaKar() {
            var breakout = false;
            $("body #dataTable3 tr#dataRow").each(function (e) {
                var oldIndex = $(this).find(':input:first').attr('name').match(/\d+/);
                var jammaRakam = $("#" + oldNIndex + "txtJammaRakam").val();
                var firmName = $("#" + oldNIndex + "txtFirmName").val();
                var ayaKar = $("#" + oldNIndex + "txtAyaKar").val();
                var paKar = $("#" + oldNIndex + "txtPaKar").val();
                var dharauti = $("#" + oldNIndex + "txtDharauti").val();
                if (firmName == "" || isNaN(ayaKar) || isNaN(paKar) || isNaN(dharauti) || isNaN(jammaRakam)) {
                    alert("All Fields in आयकर विवरण table are not inserted.");
                    breakout = true;
                    return false;
                }
            });
            if (breakout) {
                return false;
            }
            else {
                return true;
            }
        }


        function serializeTableRow() {
            var i = 0;
            $("#dataTable tr#dataRow").each(function (e) {
                $(this).find('input,select').each(function () {

                    // var suffix = $(this).find(':input:first').attr('name').match(/\d+/);
                    var oldN = $(this).attr('name');
                    var oldNIndex = oldN.match(/\d+/);
                    var newN = oldN.replace('[' + oldNIndex + ']', '[' + parseInt(i) + ']');
                    $(this).attr('name', newN);
                });
                i = (parseInt(i) + 1);
            });
        }

        function serializeTableRow2() {
            var i = 0;
            $("body #dataTable2 tr#dataRow").each(function (e) {
                $(this).find('input').each(function () {

                    var oldN = $(this).attr('name');
                    var oldNIndex = oldN.match(/\d+/);
                    var newN = oldN.replace(oldNIndex, parseInt(i));
                    $(this).attr('name', newN);
                });
                i = (parseInt(i) + 1);
            });
        }

        function serializeTableRow3() {
            var i = 0;
            $("body #dataTable3 tr#dataRow").each(function (e) {
                $(this).find('input').each(function () {

                    var oldN = $(this).attr('name');
                    var oldNIndex = oldN.match(/\d+/);
                    var newN = oldN.replace(oldNIndex, parseInt(i));
                    $(this).attr('name', newN);
                });
                i = (parseInt(i) + 1);
            });
        }

        $('body #dataTable3').on("keyup", "input[id*='txtJammaRakam']", function (e) {
            //$("body", "input[id*='txtBakiPaune']").on("mouseenter", function () {
            var $trRowclicked = $(this).closest('tr');
            var suffix = $trRowclicked.find(':input:first').attr('name').match(/\d+/);
            var dharauti = $("#" + parseInt(suffix) + "txtDharauti").val();
            var aayaKar = $("#" + parseInt(suffix) + "txtAyaKar").val();
            var paKar = $("#" + parseInt(suffix) + "txtPaKar").val();
            if (isNaN(dharauti) || isNaN(aayaKar) || isNaN(paKar)) {
                alert("Input 0 or Number only if amount is zero.");
                $(this).val(NaN);
            }
            else {
                var jammaRakam = parseFloat(dharauti) + parseFloat(aayaKar) + parseFloat(paKar);
                $(this).val(parseFloat(jammaRakam));
            }
        });


        $('body #dataTable2').on("keyup", "input[id*='txtBakiPaune']", function (e) {
            //$("body", "input[id*='txtBakiPaune']").on("mouseenter", function () {
            var $trRowclicked = $(this).closest('tr');
            var suffix = $trRowclicked.find(':input:first').attr('name').match(/\d+/);
            var jammmaRakam = $("#" + parseInt(suffix) + "txtJammaRakam").val();
            var dharauti = $("#" + parseInt(suffix) + "txtDharauti").val();
            var aayaKar = $("#" + parseInt(suffix) + "txtAyaKar").val();
            var paKar = $("#" + parseInt(suffix) + "txtPaKar").val();
            if (isNaN(jammmaRakam) || isNaN(dharauti) || isNaN(aayaKar) || isNaN(paKar)) {
                $(this).val(NaN);
            }
            else {
                var bakiPaune = parseFloat(jammmaRakam) - parseFloat(dharauti) - parseFloat(aayaKar) - parseFloat(paKar);
                $(this).val(parseFloat(bakiPaune));
            }
        });


        //$("#0txtBakiPaune").keyup(function () {
        //    $("#0txtBakiPaune", "#dataTable").autocomplete(autoCompOption);
        //});


        $("[id*='txtKhaSiNo']").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: RootUrl + 'JornalEntries/AutoCompleteKhaSirsak/',
                    data: "{ 'prefix': '" + request.term + "'}",
                    dataType: "json",
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {
                        response($.map(data, function (item) {
                            return item;
                        }))
                    },
                    error: function (response) {
                        alert(response.responseText);
                    },
                    failure: function (response) {
                        alert(response.responseText);
                    }
                });
            },

            select: function (e, i) {
                $(this).val(i.item.label);
                autofillKhaSirsak(i.item.value, $(this).attr('id').match(/\d+/));
            },
            focus: function (event, i) {
                event.preventDefault();
                $(this).val(i.item.label);
            },
            minLength: 1
        });
        $("[id*='txtBibaran']").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: RootUrl + 'JornalEntries/AutoComplete/',
                    data: "{ 'prefix': '" + request.term + "'}",
                    dataType: "json",
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {
                        response($.map(data, function (item) {
                            return item;
                        }))
                    },
                    error: function (response) {
                        alert(response.responseText);
                    },
                    failure: function (response) {
                        alert(response.responseText);
                    }
                });
            },
            select: function (e, i) {
                $(this).val(i.item.label);
                autofill(i.item.value, $(this).attr('id').match(/\d+/));
            },
            focus: function (event, i) {
                event.preventDefault();
                $(this).val(i.item.label);
            },
            minLength: 1
        });
      



        //$("#1txtBibaran").keyup(function () {
        //    $("#0txtBibaran", "#dataTable").autocomplete(autoCompOption);
        //});
        //$("#dataTable #2txtBibaran").keyup(function () {
        //    $("#0txtBibaran", "#dataTable").autocomplete(autoCompOption);
        //});

        //$("table#dataTable tr").each(function () {
        //    $(this).find("td:first").find("input").autocomplete(autoCompOption);
        //});

        $("#btnSubmit").click(function (e) {
            var breakout = false;
            var jornalType = $("#txtJornalType").val();
            var nullStatus = $("txtNullStatus").val();
            if (checkValidationTextBox() == false) {
                breakout = true;
                e.preventDefault();
            }

            if (breakout == false) {
                if (checkValidationDeCre() == false) {
                    breakout = true;
                    e.preventDefault();
                }
            }

            if (breakout == false && jornalType == "खर्च" && nullStatus == "notNull") {
                if (checkValidationBhuktani() == false) {
                    breakout = true;
                    e.preventDefault();
                }
                else {
                    serializeTableRow2();
                }
            }

            if (breakout == false && jornalType == "कट्टी" && nullStatus == "notNull") {
                if (checkValidationAyaKar() == false) {
                    breakout = true;
                    e.preventDefault();
                }
                else {
                    serializeTableRow3();
                }
            }

            if (breakout == false) {
                serializeTableRow();
            }
            else {
                e.preventDefault();
            }
        });
    });
    </script>
  <script src="~/Transliteration/transliteration.js"></script>
<link href="~/Transliteration/transliteration.css" rel="stylesheet" />
<script src="~/Transliteration/transliteration.I.js"></script>


@*<script src="https://www.google.com/uds/?file=elements&amp;v=1&amp;packages=transliteration" type="text/javascript"></script>
<link href="https://www.google.com/uds/api/elements/1.0/7ded0ef8ee68924d96a6f6b19df266a8/transliteration.css" type="text/css" rel="stylesheet">
<script src="https://www.google.com/uds/api/elements/1.0/7ded0ef8ee68924d96a6f6b19df266a8/transliteration.I.js" type="text/javascript"></script>*@

}



